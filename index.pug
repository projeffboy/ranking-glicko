extends template.pug
block headFiles
    title Glicko Simulator
    link(rel='stylesheet', href='src/library/mathquill.css')
    script(src='https://code.jquery.com/jquery-3.1.1.min.js', integrity='sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=', crossorigin='anonymous')
    script(src='src/library/mathquill.js')
    script(src='src/js/script.js', defer)
block mainContent
    h1 The Glicko Simulator
    button.accordion What is Glicko?
    .panel
        p Most game rating systems determine, using a value, how good a player is.
        p However, the <strong>Glicko system</strong> uses two values to judge a player's strength:
        ol
            li <strong>Rating</strong> (second table column) – how good a player is on average.
            li <strong>Rating Deviation</strong> (third table column) – determines the accuracy of the rating (the higher the more inaccurate).
        p The two values above make up the <strong>Glicko rating</strong>. In fact, a player's Glicko rating can be represented as a normal distribution curve:
        img(src='res/img/normal-distribution.png', alt='normal distribution')
        p Rating would be the mean (<em>μ</em>), and rating deviation would be two standard deviations from the mean (<em>μ ± 2σ</em>).
    button.accordion More Information About Glicko
    .panel
        p Glicko was invented by Harvard professor Mark E. Glickman in 1995. Since I present a very brief and limited view of how Glicko works, you should check out his <a href='http://www.glicko.net/glicko/glicko.pdf'>research paper</a> for more information. Likewise, you can check out the <a href='https://en.wikipedia.org/wiki/Glicko_rating_system'>Wikipedia page</a> too instead.
    button.accordion Is Player A or B Better?
    .panel
        p Elo is an example of a game system that uses just one value to determine the rating of a player. This means that comparing two players is very easy – the person with the higher rating is better, of course.
        p However, since Glicko ratings are based on normal distributions, comparing two players is not as straightforward. Suppose you have two players. Player A has a rating of 1720 and a rating deviation of 100, while player B has a rating of 1680 and a rating deviation of 40. If you take a look at their normal distributions below, it's hard to tell who is better:
        img(src='res/img/two-normal-distributions.png', alt='two normal distributions')
        p In order to determine who is the better player, you will need to use this formula:
        p.SM E_A=\frac{1}{1+10^{\frac{-g(\sigma)(r_A-r_B)}{400}}}
        p Where:
        ul
            li <span class='SM'>E_A</span> is the <strong>expected chance</strong> or probability that player A will beat player B
            li <span class='SM'>r_A</span> is player A's rating
            li <span class='SM'>RD_A</span> is player A's rating deviation
            li <span class='SM'>r_B</span> is player B's rating
            li <span class='SM'>RD_B</span> is player B's rating deviation
            li <span class='SM'>\sigma=\sqrt{RD_A^2+RD_B^2}</span>
            li <span class='SM'>g(\sigma)=\frac{1}{\sqrt{1+\frac{3q^2\sigma^2}{\pi^2}}}</span>
            li <span class='SM'>q=\frac{\ln{10}}{400}</span>
        p By using the formula above, the expected chance that player A will beat player B is...
        p.SM.block \sigma=\sqrt{100^2+40^2}=\sqrt{11600}
        p.SM.block E_A=\frac{1}{1+10^{\frac{-g(11600)(1680-1720)}{400}}}=0.5543
        p Since player A has a 55.43% chance of defeating player B, player A is the better player (although very slightly).
    button.accordion What the Table Below is About
    .panel
        p If you can compare the two player's Glicko ratings to see who's better, that means you can compare every player with every other player to create a leaderboard, or ranking system.
        p Unfortunately, comparing each player with every other player can be very computationally intensive, especially if there is a lot of players involved.
        p In the table below, I've created 250 fake players, each with a randomly generated rating between 1000 and 2000, since 1500 is usually the rating for a new player. Meanwhile, the rating deviation is randomly generated to have a value between 30 and 100, since according to Glicko, any value outside of that range is considered either unrealistically accurate or too unreliable to be used.
        p Here is a description of what some of the columns mean:
        ul
            li <strong>Average Expected Chance</strong> – the average probability of a particular player winning against every other ranked player.
            li Mean – the probability that a player would win against an imaginary player with the average Glicko rating of all the ranked players.
            li Median – the probability that a player would win against the median player. In this case, it would be against the 125th player.
            li New Player – the average probability that a player would would win against a new player with a rating of 1500 and a rating deviation of 350.
        p The fourth column is what determines the ranking of the players. The fifth to seventh columns are close approximations (cells colored red underank a player while cells colored green overank a player).
    table
        tbody#rankings
            tr
                for th in ['Rank', 'Rating', 'Rating Deviation', 'Average Expected Chance', 'Mean', 'Median', 'New Player']
                    th= th
    button.accordion What the Table Below is About
    .panel
        p The table below shows the accuracy of the fifth to seventh columns from the table above. The fourth column above is assumed to be 100%.
        p As you can see, finding the expected chance of winning a new player for every ranked player is the most simple and accurate way to set up a ranking system. In conclusion, it is the best estimation of the average expected chance.
    table
        tbody#estimatedEa
            tr
                for th in ['Test Player', 'Rating', 'Rating Deviation', 'Accuracy', 'Mean of Change in Ranking', 'Standard Deviation of Change in Ranking']
                    th= th
